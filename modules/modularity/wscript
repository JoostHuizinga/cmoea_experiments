#! /usr/bin/env python
import os
import traceback

CURRENT_MODULE_DIR = "/modules/modularity"

def options(opt):
    try:
        opt.load('gsl', tooldir=os.getcwd() + CURRENT_MODULE_DIR)
    except:
        traceback.print_exc()
    #gsl.options(conf)
    #pass

def configure(conf):
    try:
        conf.check_gsl()
    except:
        traceback.print_exc()
    #conf.env.LIB_GSL=['gsl','gslcblas']

def build(bld):
    pass
#    test_modularity = bld.new_task_gen('cpp', 'program')
#    test_modularity.source = 'test_modularity.cpp'
#    test_modularity.includes = '. ../../'
#    test_modularity.uselib_local = ''
#    test_modularity.uselib = 'BOOST_GRAPH BOOST_UNIT_TEST_FRAMEWORK GSL'
#   test_modularity.target = 'test_modularity'
#   test_modularity.unit_test = 1

    # compute_modularity = bld.program(features = 'cxx',
    #                                  source = 'compute_modularity.cpp',
    #                                  includes = '. ../../',
    #                                  use = '',
    #                                  uselib = 'BOOST BOOST_GRAPH BOOST_UNIT_TEST_FRAMEWORK GSL',
    #                                  target = 'compute_modularity')
