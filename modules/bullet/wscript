#! /usr/bin/env python
#| This file is a part of the sferes2 framework.
#| Copyright 2009, ISIR / Universite Pierre et Marie Curie (UPMC)
#| Main contributor(s): Jean-Baptiste Mouret, mouret@isir.fr
#|
#| This software is a computer program whose purpose is to facilitate
#| experiments in evolutionary computation and evolutionary robotics.
#| 
#| This software is governed by the CeCILL license under French law
#| and abiding by the rules of distribution of free software.  You
#| can use, modify and/ or redistribute the software under the terms
#| of the CeCILL license as circulated by CEA, CNRS and INRIA at the
#| following URL "http://www.cecill.info".
#| 
#| As a counterpart to the access to the source code and rights to
#| copy, modify and redistribute granted by the license, users are
#| provided only with a limited warranty and the software's author,
#| the holder of the economic rights, and the successive licensors
#| have only limited liability.
#|
#| In this respect, the user's attention is drawn to the risks
#| associated with loading, using, modifying and/or developing or
#| reproducing the software by the user in light of its specific
#| status of free software, that may mean that it is complicated to
#| manipulate, and that also therefore means that it is reserved for
#| developers and experienced professionals having in-depth computer
#| knowledge. Users are therefore encouraged to load and test the
#| software's suitability as regards their requirements in conditions
#| enabling the security of their systems and/or data to be ensured
#| and, more generally, to use and operate it in the same conditions
#| as regards security.
#|
#| The fact that you are presently reading this means that you have
#| had knowledge of the CeCILL license and that you accept its terms.
import os
import traceback
from waflib.Configure import conf

# TODO: Find a way to have this always point to the corret place
CURRENT_MODULE_DIR = "/modules/bullet"

def options(opt):
    try:
        opt.add_option('--no-opengl', action='store_true', default=False,
                       help='Do not build opengl dependend libs', dest='no_opengl')
        opt.add_option('--bullet-not-in-folder', action='store_true', default=False,
                       help='Add if the bullet header files are not in the bullet folder',
                       dest='bullet_not_in_folder')
        opt.add_option('--bullet-double-precision', action='store_true', default=False,
                       help='Supply if bullet was compiled with double precision',
                       dest='bullet_double_precision')
        opt.load('bullet', tooldir=os.getcwd() + CURRENT_MODULE_DIR)
        opt.load('opengl', tooldir=os.getcwd() + CURRENT_MODULE_DIR)
    except:
        traceback.print_exc()

def configure(conf):
    try:
        if conf.options.bullet_not_in_folder:
            if "BULLET_NOT_IN_BULLET_FOLDER" not in conf.env.DEFINES_BULLET:
                conf.env.DEFINES_BULLET += ["BULLET_NOT_IN_BULLET_FOLDER"]
        if conf.options.no_opengl:
            conf.env['USE_OPENGL'] = False
        else:
            conf.env['USE_OPENGL'] = True
            conf.check_opengl()
            conf.check_glut()
        conf.check_bullet()
    except:
        traceback.print_exc()


def build(bld):
    print ("Entering directory " + os.getcwd() + CURRENT_MODULE_DIR)
    if not bld.env['USE_OPENGL']: 
        return
    bld.stlib(features = 'cxx cxxstlib',
              source = 'DemoApplication.cpp GL_ShapeDrawer.cpp GLDebugFont.cpp GlutDemoApplication.cpp GlutStuff.cpp',
              includes = '. ../..',
              uselib = 'BULLET OPENGL GLUT',
              target = 'OpenGLSupport')


