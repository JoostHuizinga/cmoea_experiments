#ifndef WALL_HH_
#define WALL_HH_

#include "map.hpp"
#include <boost/shared_ptr.hpp>

namespace fastsim {
  class Map; //forward declaration
  class Door {
	public:
	  ////////////////////////////////////////////////////////
	  ////////////////////////////////////////////////////////
	  ////////////* Constructors/Destructors *////////////////
	  ////////////////////////////////////////////////////////
	  ////////////////////////////////////////////////////////

	  /*
	   * Creates a door with the given width, height, and position.
	   * Doors block all movement as long as they are active.
	   * If the switch attached to this door is activated, the door will be opened.
	   */
	  Door(boost::shared_ptr<Map> map, int color, int x, int y, int width, int height);

	  ////////////////////////////////////////////////////////
	  ////////////////////////////////////////////////////////
	  ////////////////////* Functions *///////////////////////
	  ////////////////////////////////////////////////////////
	  ////////////////////////////////////////////////////////

	  /* Updates the door; if its switch has been pressed, the door will be opened. */
	  void update(boost::shared_ptr<Map> map);

	  /* Resets the door and associated switch to its default state (closed). */
	  void reset(boost::shared_ptr<Map> map);

	  /* Gets whether this door is active (i.e. closed). */
	  bool isActive() { return active; }

	private:
	  ////////////////////////////////////////////////////////
	  ////////////////////////////////////////////////////////
	  //////////////////////* Fields *////////////////////////
	  ////////////////////////////////////////////////////////
	  ////////////////////////////////////////////////////////

	  int color;
	  int x;
	  int y;
	  int width;
	  int height;
	  bool active;
	  int switchIndex1;
	  int switchIndex2;
  };
}
#endif
